
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\User\Desktop\Vision Sensor System\UI\frame")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

#Create a Tkinter Window
window = Tk()
window.geometry("1920x1080")
window.configure(bg = "#1F1C25")

canvas = Canvas(
    window,
    bg = "#1F1C25",
    height = 1080,
    width = 1920,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

#Title Banner
canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    0.0,
    15.24444580078125,
    1920.0,
    127.24444580078125,
    fill="#383442",
    outline="")

canvas.create_text(
    454.0,
    44.24444580078125,
    anchor="nw",
    text="Hyperloop Pod Vision Sensor System Panel",
    fill="#FFFFFF",
    font=("Alata Regular", 48 * -1)
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    111.0,
    71.24444580078125,
    image=image_image_1
)

#
image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    670.0,
    172.24444580078125,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    670.0,
    924.2444458007812,
    image=image_image_3
)

canvas.create_rectangle(
    30.0,
    198.24444580078125,
    1310.0,
    918.2444458007812,
    fill="#383443",
    outline="")

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    1615.0,
    172.24444580078125,
    image=image_image_4
)

canvas.create_text(
    1362,
    160,
    anchor="nw",
    text="Objects Detected",
    fill="#FFFFFF",
    font=("Commissioner Bold", 25 * -1)
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    1615.0,
    924.2444458007812,
    image=image_image_5
)

canvas.create_rectangle(
    1341.0,
    198.24444580078125,
    1890.0,
    918.2444458007812,
    fill="#383442",
    outline="")

canvas.create_rectangle(
    1881.0,
    207.24444580078125,
    1888.0,
    913.2444458007812,
    fill="#2D2936",
    outline="")

canvas.create_text(
    82,
    160,
    anchor="nw",
    text="Live Video Feed",
    fill="#FFFFFF",
    font=("Commissioner Bold", 25 * -1)
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    55.497314453125,
    172.599609375,
    image=image_image_6
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    1018.0,
    992.4703979492188,
    image=image_image_7
)

#Warning Status Message
image_warning_1 = PhotoImage(
    file=relative_to_assets("image_8.png"))
warning_1 = canvas.create_image(
    422,
    986,
    image=image_warning_1
)

image_warning_2 = PhotoImage(
    file=relative_to_assets("image_9.png"))
warning_2 = canvas.create_image(
    1612,
    986,
    image=image_warning_2
)

image_alert_1 = PhotoImage(
    file=relative_to_assets("image_10.png"))
alert_1 = canvas.create_image(
    422,
    986,
    image=image_alert_1
)

image_alert_2 = PhotoImage(
    file=relative_to_assets("image_11.png"))
alert_2 = canvas.create_image(
    1612,
    986,
    image=image_alert_2
)

status_text = canvas.create_text(
    570,
    960,
    anchor="nw",
    text="Status: On Track Towards Destination",
    fill="#FFFFFF",
    font=("Commissioner Bold", 51 * -1)
)

object_alert_message = canvas.create_text(
    471,
    960,
    anchor="nw",
    text="CAUTION: OBJECT DETECTED ON TRACK ",
    fill="#FFD42A",
    font=("Commissioner Bold", 54 * -1)
)

pod_warning_message = canvas.create_text(
    470,
    960,
    anchor="nw",
    text="WARNING: POD DEVIATING FROM TRACK",
    fill="#ED1C24",
    font=("Commissioner Bold", 54 * -1)
)

object_warning_message = canvas.create_text(
    478,
    960,
    anchor="nw",
    text="WARNING: OBJECT OBSTRUCTING PATH",
    fill="#ED1C24",
    font=("Commissioner Bold", 54 * -1)
)

#Temporary Status Message Toggle Function
def toggle_text(text_item, show):
    state = "normal" if show else "hidden"
    canvas.itemconfigure(text_item, state=state)

#Toggle Warning Texts
#Set to "True" to display text and "False" to hide text
toggle_text(status_text, False)
toggle_text(object_alert_message, False) 
toggle_text(pod_warning_message, False) 
toggle_text(object_warning_message, True) 

#Toggle Warning Images
#Set to "normal" to display image and "hidden" to hide image
canvas.itemconfig(warning_1, state="normal")
canvas.itemconfig(warning_2, state="normal")
canvas.itemconfig(alert_1, state="hidden")
canvas.itemconfig(alert_2, state="hidden")

window.resizable(True, True)
window.mainloop()
